//
//  AMF0EncodeTests.swift
//  
//
//  Created by 郭 輝平 on 2023/03/25.
//

import XCTest
@testable import HPRTMP

extension Data {
  var debugValue: String {
    let byteValues = Array(self)
    let byteStrings = byteValues.map { "0x" + String($0, radix: 16) }
    let byteString = "[" + byteStrings.joined(separator: ", ") + "]"
    return byteString
  }
}

final class AMF0EncodeTests: XCTestCase {
  
  override func setUpWithError() throws {
    // Put setup code here. This method is called before the invocation of each test method in the class.
  }
  
  override func tearDownWithError() throws {
    // Put teardown code here. This method is called after the invocation of each test method in the class.
  }
  
  func testEncoding() {
    // Number
    XCTAssertEqual(123.amf0Value, Data([0x00, 0x3F, 0xF6, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00]))
//    XCTAssertEqual(3.14.amf0Value, Data([0x0, 0x1f, 0x85, 0xeb, 0x51, 0xb8, 0x1e, 0x9, 0x40]))

    // Boolean
    XCTAssertEqual(true.amf0Value, Data([0x01, 0x01]))
    XCTAssertEqual(false.amf0Value, Data([0x01, 0x00]))
    
    // String
    XCTAssertEqual("hello".amf0Value, Data([0x02, 0x00, 0x05, 0x68, 0x65, 0x6c, 0x6c, 0x6f]))
    
    // Long String
    let longString = String(repeating: "a", count: Int(UInt16.max) + 1)
    XCTAssertEqual(longString.amf0Value, Data([0x0c, 0x00, 0x01, 0x00, 0x00] + Array(repeating: 0x61, count: Int(UInt16.max) + 1)))
    
    // Date
    let date = Date(timeIntervalSince1970: 10.12)
    XCTAssertEqual(date.amf0Value, Data([0x0b, 0x0, 0x0, 0x0, 0x0, 0x0, 0xc4, 0xc3, 0x40, 0x0, 0x0]))

    // Object
//    let object = ["name": "John", "age": 30] as [String: Any]
//    XCTAssertEqual(object.amf0Encode, Data([0x3, 0x2, 0x0, 0x4, 0x6e, 0x61, 0x6d, 0x65, 0x2, 0x0, 0x4, 0x4a, 0x6f, 0x68, 0x6e, 0x2, 0x0, 0x3, 0x61, 0x67, 0x65, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x3e, 0x40, 0x0, 0x0, 0x9]))
    
    // Simple array with Int, String, and Double values
    let array: [Any] = [1, "two", 3.0]
    XCTAssertEqual(array.amf0Value, Data([0xa, 0x0, 0x0, 0x0, 0x3, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0xf0, 0x3f, 0x2, 0x0, 0x3, 0x74, 0x77, 0x6f, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x8, 0x40]))
    
    // Array of dictionaries
    let dict1: [String: Any] = ["name": "John", "age": 30]
    let dict2: [String: Any] = ["name": "Jane", "age": 25]
    let array2 = [dict1, dict2]

    print("[test] \(array2.amf0Value.debugValue)")
//    let expectedData = Data([0xa, 0x0, 0x0, 0x0, 0x2, 0x3, 0x2, 0x0, 0x3, 0x61, 0x67, 0x65, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x3e, 0x40, 0x2, 0x0, 0x4, 0x6e, 0x61, 0x6d, 0x65, 0x2, 0x0, 0x4, 0x4a, 0x6f, 0x68, 0x6e, 0x0, 0x0, 0x9, 0x3, 0x2, 0x0, 0x4, 0x6e, 0x61, 0x6d, 0x65, 0x2, 0x0, 0x4, 0x4a, 0x61, 0x6e, 0x65, 0x2, 0x0, 0x3, 0x61, 0x67, 0x65, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x39, 0x40, 0x0, 0x0, 0x9])
//    XCTAssertEqual(array2.amf0Value, expectedData)
  }
}
